

:class:`VersionMeta`
====================

.. py:class:: ansys.tools.versioning.utils.VersionMeta

   
   Metaclass for version comparison.

   Implements modification to magic methods.















   ..
       !! processed by numpydoc !!









.. py:currentmodule:: VersionMeta

Overview
--------

.. tab-set::







   .. tab-item:: Special methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~__le__`
            - Less equal.
          * - :py:attr:`~__lt__`
            - Less than.
          * - :py:attr:`~__ge__`
            - Greater equal.
          * - :py:attr:`~__gt__`
            - Greater than.
          * - :py:attr:`~__eq__`
            - Equal method.
          * - :py:attr:`~__ne__`
            - Not equal.
          * - :py:attr:`~__hash__`
            - Call the underlying __hash__ method.




Import detail
-------------

.. code-block:: python

    from ansys.tools.versioning.utils import VersionMeta





Method detail
-------------
.. py:method:: __le__(__x: Union[str, int]) -> bool

   
   Less equal.

   If compared against a string which contains 'dev' it will always evaluate to True.
   If compared against an int, it will perform a classic 'less equal' operation.















   ..
       !! processed by numpydoc !!

.. py:method:: __lt__(__x: Union[str, int]) -> bool

   
   Less than.

   If compared against a string which contains 'dev' it will always evaluate to True.
   If compared against an int, it will perform a classic 'less than' operation.















   ..
       !! processed by numpydoc !!

.. py:method:: __ge__(__x: Union[str, int]) -> bool

   
   Greater equal.

   If compared against a string which contains 'dev' it will always evaluate to False.
   If compared against an int, it will perform a classic 'greater equal' operation.















   ..
       !! processed by numpydoc !!

.. py:method:: __gt__(__x: Union[str, int]) -> bool

   
   Greater than.

   If compared against a string which contains 'dev' it will always evaluate to False.
   If compared against an int, it will perform a classic 'greater than' operation.















   ..
       !! processed by numpydoc !!

.. py:method:: __eq__(__x: object) -> bool

   
   Equal method.

   If compared against a string which contains 'dev' it will always evaluate to False.
   If compared against an int, it will perform a classic 'equal' operation.















   ..
       !! processed by numpydoc !!

.. py:method:: __ne__(__x: object) -> bool

   
   Not equal.

   If compared against a string which contains 'dev' it will always evaluate to not
   'equal' operation (True). If compared against an int, it will perform a classic 'not equal' operation.















   ..
       !! processed by numpydoc !!

.. py:method:: __hash__() -> int

   
   Call the underlying __hash__ method.
















   ..
       !! processed by numpydoc !!


