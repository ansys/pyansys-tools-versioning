name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.10'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit tox

      - name: Test with tox
        run: tox -e style

  docs-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
  
      - name: Running Vale
        uses: errata-ai/vale-action@reviewdog
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: doc
          reporter: github-pr-check
          level: error
          filter_mode: nofilter
          fail_on_error: true
          vale_flags: "--config=doc/.vale.ini"

  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        cfg:
          - {python-version: "3.7", toxenv: "py37", toxargs: "cov"}
          - {python-version: "3.8", toxenv: "py38", toxargs: "cov"}
          - {python-version: "3.9", toxenv: "py39", toxargs: "cov"}
          - {python-version: "3.10", toxenv: "py310", toxargs: "doctests-cov"}
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.cfg.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.cfg.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox

      - name: Test with tox
        run: tox -e ${{ matrix.cfg.toxenv }}-${{ matrix.cfg.toxargs }}


  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: docs-style
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flit tox

      - name: Generate the documentation with tox
        run: tox -e doc

      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: HTML-Documentation
          path: .tox/doc_out
          retention-days: 7

      - name: Deploy documentation to gh-pages
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4.4.0
        with:
          token: ${{ secrets.github_token }}
          branch: gh-pages
          folder: .tox/doc_out
          clean: true
          single-commit: true

  build:
    name: Build library
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install dependencies and build the library
        run: |
          python -m pip install --upgrade pip flit
          python -m pip install -r requirements/requirements_build.txt
          flit build
          python -m twine check dist/*
